name: CD - MONITOR-LOGS-MICROSERVICE

on:
  workflow_run:
    workflows: ["CI - Docker Build & Push (MONITOR-LOGS-MICROSERVICE)"]
    types:
      - completed

permissions:
  contents: read

jobs:
  MONITOR-LOGS-MICROSERVICE-CD:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.0'

      - name: Apply Secrets
        run: |
          cd backend/k8s
          kubectl apply -f secrets/
          echo "Secrets applied"
          kubectl get secrets -n ashapp

      - name: Apply StatefulSets
        run: |
          cd backend/k8s
          kubectl apply -f statefulset/
          echo "StatefulSets applied"
          kubectl get statefulsets -n ashapp
          kubectl get po -n ashapp


      - name: Deployment Image
        run: |
          cd backend/k8s
          kubectl apply -f deployment/
          

      # Rollout restart to ensure pods pick new image
      - name: Rollout Restart
        run: |
          kubectl rollout status deployment/flask-monitor -n ashapp

      - name: Apply Services
        run: |
          cd backend/k8s
          kubectl apply -f services/
          echo "Services applied"
          kubectl get svc -n ashapp

      - name: Apply Network Policies
        run: |
          cd backend/k8s
          kubectl apply -f networkpolicies/
          echo "NetworkPolicies applied"
          kubectl get networkpolicy -n ashapp

      - name: Apply HPA
        run: |
          cd backend/k8s
          kubectl apply -f hpa/
          echo "HPA applied"
          kubectl get hpa -n ashapp

      - name: Apply RBAC
        run: |
          cd backend/k8s
          kubectl apply -f rbac/ --recursive
          echo "RBAC applied"
          kubectl get sa -n ashapp
          kubectl get role -n ashapp
          kubectl get rolebinding -n ashapp
